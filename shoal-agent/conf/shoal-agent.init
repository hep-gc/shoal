#!/bin/bash
# Basic support for IRIX style chkconfig
###
# chkconfig: 235 98 55
# description: Manages shoal agent with chkconfig.
###

# set non-default path to shoal-agent executable
# eg. "/opt/bin/shoal-agent"
EXECUTABLEPATH="shoal-agent"

# Non-default python.
PYTHON=""

SHOAL_USER=shoal
EXTRA_OPTIONS=""
SERVICE=shoal_agent
LOG=/var/log/${SERVICE}.log
PIDFILE=/var/run/$SERVICE.pid
COMMAND=$1


shift

for i in "$PIDFILE" "$LOG"; do
    # If the file doesn't exist, check that we have write access to its parent
    # directory to be able to create it.
    test -e "$i" || i=`dirname "$i"`
    test -w "$i" || {
        echo >&2 "$0: error: Cannot write to $i"
        exit 4
    }
done

start () {
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        ps -p $PID >/dev/null
        if [ $? -eq 0 ]; then
            echo $"$SERVICE is already running with PID ${PID}."
            return 1
        else
            echo $"$SERVICE didn't shut down cleanly last time."
            rm -f $PIDFILE
        fi
    fi
    echo "Starting $EXECUTABLEPATH:"
    /sbin/runuser -l -s /bin/bash "${SHOAL_USER}" -c "${EXECUTABLEPATH} ${EXTRA_OPTIONS}" >> $LOG 2>&1 &
    echo $! > $PIDFILE
}

# stop [signum]
stop () {
    if [ -f $PIDFILE ]; then
        echo $"Stopping $SERVICE:"
        PID=`cat $PIDFILE`
        /sbin/runuser -l -s /bin/bash "${SHOAL_USER}" -c "/usr/bin/pkill -P ${PID}"
        while ps -p $PID >/dev/null; do sleep 1; done
        if [ $? -eq 0 ]; then
            rm -f $PIDFILE
        fi
    fi
}

status () {
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            ps -p $PID >/dev/null
            if [ $? -eq 0 ]; then
                PID=`cat $PIDFILE`
                echo $"$SERVICE is running with PID ${PID}."
                return 0
            else
                echo $"$SERVICE has exited unexpectedly."
                return 1
            fi
        else
            echo "$SERVICE isn't running."
            return 1
        fi
}

forcekill () {
    if [ -f $PIDFILE ]; then
        echo $"Killing $SERVICE:"
        PID=`cat $PIDFILE`
        /sbin/runuser -l -s /bin/bash "${SHOAL_USER}" -c "/usr/bin/pkill -SIGKILL -P ${PID}"
        if [ $? -eq 0 ]; then
            rm -f $PIDFILE
        fi
    fi
}

case $COMMAND in
    start) start
        ;;
    force-restart)
        forcekill
        start
        ;;
    restart)
        stop
        start
        ;;
    stop) stop
        ;;
    status) status
            exit $?
        ;;
    *)  echo >&2 "usage: $0 <start|stop|restart|status|force-restart>"
        exit 1
        ;;
esac
