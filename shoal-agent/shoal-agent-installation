#!/bin/bash

systemctl stop shoal-agent

groupadd shoal
useradd shoal -g shoal

cp /usr/share/shoal-agent/shoal-agent.init /etc/init.d/
cp /usr/share/shoal-agent/shoal-agent.logrotate /etc/logrotate.d/
cp /usr/share/shoal-agent/shoal-agent.service /usr/lib/systemd/system/

CONFIG_FILE=/etc/shoal/shoal_agent.conf
CONFIG_FILE_OLD=/etc/shoal/shoal_agent_old.conf
SOURCE_FILE=/usr/share/shoal-agent/shoal_agent.conf
CONFIG_DIRECTORY=/etc/shoal/

CFG_CONTENT=$(cat $SOURCE_FILE | sed -r '/[^=]+=[^=]+/!d' | sed -r 's/\s+=\s/=/g')
eval "$CFG_CONTENT"

DEFAULT_INTERVAL=$interval
DEFAULT_AMQP_SERVER_URL=$amqp_server_url
DEFAULT_AMQP_PORT=$amqp_port
DEFAULT_AMQP_VIRTUAL_HOST=$amqp_virtual_host
DEFAULT_AMQP_EXCHANGE=$amqp_exchange
DEFAULT_LOG_FILE=$log_file
DEFAULT_LOGGING_LEVEL=$logging_level

setEachNewValue() {
    label=$1
    info=$2
    default=$3
    old=$4

    if [ ! -z "$old" ]; then
        echo $"Please enter a value for setting the $label, $info. Your currently $label value is '$old', and the default value is '$default'. If you want to use the default, press 'Enter':"
    else
        echo $"Please enter a value for setting the $label, $info. The default value is '$default'. If you want to use the default, press 'Enter':"
    fi
    read enter_value
    if [ ! -z "$enter_value" ]; then
        if [ "$label" == "log_file" ]; then
            touch $enter_value
            chown shoal:shoal $enter_value
        fi
        if [ "$label" == "admin_email" ]; then
            origin=$"#$label=$default"
        else
            origin=$"$label=$default"
        fi
        replace=$"$label=$enter_value"
        sed -i "s|$origin|$replace|g" $CONFIG_FILE
    else
        if [ "$label" == "log_file" ]; then
            touch $default
            chown shoal:shoal $default 
        fi  
    fi

}

setNewValues() {
    setEachNewValue interval "interval is at which the shoal-agent will contact the shoal server" $DEFAULT_INTERVAL $OLD_INTERVAL
    setEachNewValue admin_email "admin email is used for contact in case of issues with the shoal-agent or squid" root@localhost
    setEachNewValue amqp_server_url "this is the RabbitMQ server ip" $DEFAULT_AMQP_SERVER_URL $OLD_AMQP_SERVER_URL
    setEachNewValue amqp_port "this is the port number for amqp connection" $DEFAULT_AMQP_PORT $OLD_AMQP_PORT
    setEachNewValue amqp_virtual_host "this is used for RabbitMQ virtual host" $DEFAULT_AMQP_VIRTUAL_HOST $OLD_AMQP_VIRTUAL_HOST
    setEachNewValue amqp_exchange "this is the RabbitMQ exchange name" $DEFAULT_AMQP_EXCHANGE $OLD_AMQP_EXCHANGE
    setEachNewValue log_file "this is to set the path of the log file" $DEFAULT_LOG_FILE $OLD_LOG_FILE
    setEachNewValue logging_level "this decides how much information to write to the log file, select one from 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'" $DEFAULT_LOGGING_LEVEL $OLD_LOGGING_LEVEL
}

if [ -f "$CONFIG_FILE" ]; then
    OLD_CFG_CONTENT=$(cat $CONFIG_FILE | sed -r '/[^=]+=[^=]+/!d' | sed -r 's/\s+=\s/=/g')
    eval "$OLD_CFG_CONTENT"

    OLD_INTERVAL=$interval
    OLD_AMQP_SERVER_URL=$amqp_server_url
    OLD_AMQP_PORT=$amqp_port
    OLD_AMQP_VIRTUAL_HOST=$amqp_virtual_host
    OLD_AMQP_EXCHANGE=$amqp_exchange
    OLD_LOG_FILE=$log_file
    OLD_LOGGING_LEVEL=$logging_level

    mv $CONFIG_FILE $CONFIG_FILE_OLD
    cp $SOURCE_FILE $CONFIG_FILE

    setNewValues
else
    if [ ! -d "$CONFIG_DIRECTORY" ]; then
        mkdir $CONFIG_DIRECTORY
    fi
    cp $SOURCE_FILE $CONFIG_DIRECTORY

    setNewValues
fi

systemctl daemon-reload
systemctl start shoal-agent

echo Start the shoal-agent, check your configuration file at $CONFIG_FILE
if [ -f "$CONFIG_FILE_OLD" ]; then
    echo Your old configuration file is now at $CONFIG_FILE_OLD
fi

