#
# A sample configuration file for shoal server.
#

[general]
# General settings for shoal.

# In order for webpy run properly the directory where
# static files are located must be set here. (default location: /var/shoal/, or ~/shoal_server/)
#
shoal_dir = /var/shoal/

# Parent directory of GeoLiteCity.dat file if you want it located elsewhere. Used for getting geolocation of each squid. 
# Default path is `shoal_dir` directory.
# e.g. /var/shoal/shoal-server/
#
#geolitecity_path =

# URL to GeoLiteCity.dat file to download when it is out of date.
#
geolitecity_url = http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz

# Update db after this many seconds {default=259200}(30 days)
#
geolitecity_update_time = 2592000

[squid]
# Configuration settings for dealing with inactive squids.

# Interval to check if a squid has become inactive.
# A process will run every `squid_cleanse_interval` seconds and check whether
# the last_active time is greater than `squid_inactive_time`.
#
squid_cleanse_interval = 15

# A squid will be considered inactive and removed from the tracked squids if shoal has not received
# an amqp message from it after `squid_inactive_time` seconds.
#
squid_inactive_time = 180

[rabbitmq]
# Configurations specific to rabbitmq consumer

# RabbitMQ Server URL
#
amqp_server_url = amqp://guest:guest@localhost:5672

# RabbitMQ virtual host. Can leave this as default most of the time.
#
amqp_virtual_host = /

# SSL Options specifies wheter or not to use the options and if so, where the needed cert/key files are
# The ca_cert must have been used to sign the client cert as well as the rabbitMQ server cert
#
use_ssl          = True
amqp_ca_cert     = ~/rabbitCA/testca/cacert.pem
amqp_client_cert = ~/rabbitCA/client/cert.pem
amqp_client_key  = ~/rabbitCA/client/key.pem

# RabbitMQ exchange name
#
amqp_exchange = shoal

# RabbitMQ Exchange type (topic, direct, fanout, etc.)
#
amqp_exchange_type = topic

[webpy]
# Configurations specific to webpy server

# Whether or not webypy should cache its pages or not.
#
webpy_cache = False

[logging]

# Log file
#
log_file = /var/log/shoal_server.log

[error]
# Configurations for error handling

# if connection to rabbitMQ server fails, this is time to wait before attempting to reconnect
# (value is in seconds)
#
error_reconnect_time = 30

# Number of consecutive failed connection attempts before shoal-server exits
# 
error_reconnect_attempts = 10
